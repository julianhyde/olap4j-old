/*
// $Id$
// This software is subject to the terms of the Common Public License
// Agreement, available at the following URL:
// http://www.opensource.org/licenses/cpl.html.
// Copyright (C) 2006-2006 Julian Hyde
// All Rights Reserved.
// You must accept the terms of that agreement to use this software.
*/
package org.olap4j;

import org.olap4j.metadata.Member;
import org.olap4j.metadata.Cube;

import java.sql.PreparedStatement;
import java.sql.SQLException;

/**
 * An object that represents a precompiled OLAP statement.
 *
 * <P>An OLAP statement is precompiled and stored in a
 * <code>PreparedOlapStatement</code> object. This object can then be used to
 * efficiently execute this statement multiple times.
 *
 * <P><B>Note:</B> The setter methods (<code>setShort</code>,
 * <code>setString</code>, and so on) for setting IN parameter values
 * must specify types that are compatible with the defined type of
 * the input parameter. For instance, if the IN parameter has type
 * <code>INTEGER</code>, then the method <code>setInt</code> should be used.
 *
 * <p>In addition to the setter methods inherited from
 * {@link PreparedStatement}, there is {@link #setMember(int, Member)}.
 *
 * @see OlapConnection#prepareOlapStatement
 * @see java.sql.ResultSet
*
 * @author jhyde
 * @version $Id$
 * @since Aug 22, 2006
 */
public interface PreparedOlapStatement
    extends PreparedStatement, OlapStatement {
    /**
     * Executes the MDX query in this <code>PreparedOlapStatement</code> object
     * and returns the <code>OlapResult</code> object generated by the query.
     *
     * @return an <code>OlapResult</code> object that contains the data produced
     *         by the query; never <code>null</code>
     * @exception SQLException if a database access error occurs
     */
    OlapResult executeOlapQuery()  throws SQLException;

    /**
     * Sets the designated parameter to the given
     * {@link org.olap4j.metadata.Member} value.
     *
     * @param parameterIndex the first parameter is 1, the second is 2, ...
     * @param x the parameter value
     * @exception SQLException if a database access error occurs
     */
    void setMember(int parameterIndex, Member x) throws SQLException;

}

// End PreparedOlapStatement.java

<!--
  == $Id$
  == This software is subject to the terms of the Common Public License
  == Agreement, available at the following URL:
  == http://www.opensource.org/licenses/cpl.html.
  == Copyright (C) 2006-2007 Julian Hyde and others.
  == All Rights Reserved.
  == You must accept the terms of that agreement to use this software.
  -->
<project name="olap4j" default="compile">
  <property environment="env"/>
  <property name="project.location" location="."/>
  <property name="lib.location" location="${project.location}/lib"/>
  <property file="${project.location}/build.properties"/>
  <property file="${project.location}/test.properties"/>
  <property name="project.build.debug" value="on"/>
  <property name="name" value="olap4j"/>
  <property name="version" value="0.9.3"/>
  <property name="dist.name" value="${name}-${version}" />

  <!-- properties related to paths -->
  <property name="src.dir" value="src"/>
  <property name="lib.dir" value="lib"/>
  <property name="classes.dir" value="classes"/>
  <property name="testsrc.dir" value="testsrc"/>
  <property name="testlib.dir" value="testlib"/>
  <property name="testlog.dir" value="testlog"/>
  <property name="testclasses.dir" value="testclasses"/>
  <property name="build.dir" value="build"/>
  <property name="doc.dir" value="doc"/>
  <property name="javadoc.dir" value="doc/api"/>
  <property name="dist.dir" value="dist"/>

  <!-- generated files -->
  <property name="jar.file" value="${lib.dir}/${name}.jar" />
  <property name="jar-jdk14.file" value="${lib.dir}/${name}-jdk14.jar" />
  <property name="dist.bin.file" value="${dist.dir}/${dist.name}.zip" />
  <property name="dist.src.file" value="${dist.dir}/${dist.name}-src.zip" />
  <property name="dist.doc.file" value="${dist.dir}/doc.tar.gz" />

  <property name="generated.java.files" value="
${src.dir}/org/olap4j/mdx/parser/impl/DefaultMdxParser.java,
${src.dir}/org/olap4j/mdx/parser/impl/DefaultMdxParserSym.java"/>

  <property name="generated.lib.files" value="
${jar.file},
${jar-jdk14.file}"/>

  <path id="project.classpath">
    <pathelement location="${classes.dir}"/>
    <pathelement path="${env.CLASSPATH}"/>
    <pathelement location="${ant.home}/lib/ant.jar"/>
    <pathelement location="${lib.dir}/log4j-1.2.9.jar"/>
    <pathelement location="${lib.dir}/javacup.jar"/>
    <pathelement location="${testlib.dir}/junit.jar"/>
    <pathelement location="${testlib.dir}/servlet.jar"/>

    <!-- To use the checked in mondrian.jar, make sure the <pathelement>
         element following this comment is uncommented; to develop code against
         'live' mondrian source code, uncomment <pathelement> elements 2 and 3
         following this comment. Between releases, we don't keep mondrian.jar
         up to date, so probably the latter option is the only one which will
         work. One day the mondrian driver will be part of the mondrian source
         code and all mondrian dependencies will go away. -->
<!--
    <pathelement location="${lib.dir}/mondrian.jar"/>
-->
    <pathelement location="${mondrian.dir}/classes"/>
    <pathelement location="${mondrian.dir}/testclasses"/>
      -->
    <!-- The following libraries are required by mondrian, and therefore olap4j
         needs them too, for now. When olap4j no longer depends on
         mondrian, and the mondrian olap4j driver is tested as part of
         mondrian's test suite, obsolete these libraries. -->
    <pathelement location="${lib.dir}/eigenbase-xom.jar"/>
    <pathelement location="${lib.dir}/eigenbase-properties.jar"/>
    <pathelement location="${lib.dir}/eigenbase-resgen.jar"/>
    <pathelement location="${lib.dir}/commons-dbcp.jar"/>
    <pathelement location="${lib.dir}/commons-pool.jar"/>
    <pathelement location="${lib.dir}/commons-collections.jar"/>
    <pathelement location="${lib.dir}/commons-vfs.jar"/>
    <pathelement location="${lib.dir}/commons-logging.jar"/>
    <pathelement location="${lib.dir}/commons-math-1.0.jar"/>
    <pathelement location="${lib.dir}/xercesImpl.jar"/>
  </path>

  <path id="project.test.classpath">
    <path refid="project.classpath"/>
    <pathelement location="${testclasses.dir}"/>
    <pathelement location="${org.olap4j.test.driverClasspath}"/>
  </path>

  <!-- Arguments to the java process spawned by the junit task. -->
  <property name="junit.jvmargs" value="-ea -esa"/>

  <target name="info">
    <echo>==============================================================</echo>
    <echo>| olap4j configuration info                                  |</echo>
    <echo>==============================================================</echo>
    <echo>project.location      = ${project.location}</echo>
    <echo>jdk.home              = ${env.JAVA_HOME}</echo>
    <echo>junit.dir             = ${junit.dir}</echo>
    <echo>retroweaver.dir       = ${retroweaver.dir}</echo>
    <echo>==============================================================</echo>
  </target>

  <target name="all" depends="clean,compile,test"/>

  <target name="clean">
    <delete includeEmptyDirs="true" quiet="true">
      <fileset dir="${classes.dir}" includes="**/*.class,**/*.properties"/>
      <fileset dir="${testclasses.dir}" includes="**/*.class,**/*.properties"/>
      <fileset dir="." includes="${generated.java.files},${generated.lib.files},VERSION.txt"/>
      <fileset dir="${build.dir}" />
    </delete>
  </target>

  <target name="clean-deep">
    <delete includeEmptyDirs="true" quiet="true">
      <fileset dir="${classes.dir}"/>
      <fileset dir="${testclasses.dir}"/>
    </delete>
    <antcall target="clean"/>
  </target>

  <target name="prepare">
    <mkdir dir="${classes.dir}"/>
    <mkdir dir="${testclasses.dir}"/>
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${testlib.dir}"/>
    <mkdir dir="${testsrc.dir}"/>
    <mkdir dir="${testlog.dir}"/>
  </target>

  <target name="compile" depends="prepare,parser,compile.java"/>

    <condition property="jdk16.present">
      <equals arg1="${ant.java.version}" arg2="1.6"/>
    </condition>
    <condition property="jdk16.not.present">
      <not>
        <equals arg1="${ant.java.version}" arg2="1.6"/>
      </not>
    </condition>

  <target name="compile.java">
    <javac
        srcdir="${src.dir}"
        destdir="${classes.dir}"
        debug="${project.build.debug}"
        classpathref="project.classpath"
        source="1.5">
      <include name="**/*.java"/>
      <exclude name="mondrian/olap4j/FactoryJdbc3Impl.java" if="jdk16.present"/>
      <exclude name="mondrian/olap4j/FactoryJdbc4Impl.java" if="jdk16.not.present"/>
      <exclude name="org/olap4j/driver/xmla/FactoryJdbc3Impl.java" if="jdk16.present"/>
      <exclude name="org/olap4j/driver/xmla/FactoryJdbc4Impl.java" if="jdk16.not.present"/>
    </javac>

    <javac
        srcdir="${testsrc.dir}"
        destdir="${testclasses.dir}"
        debug="${project.build.debug}"
        classpathref="project.classpath"
        source="1.5">
      <include name="**/*.java"/>
    </javac>
  </target>

  <target name="compile.tests" depends="info,compile.java">
    <javac
        srcdir="${testsrc.dir}"
        destdir="${testclasses.dir}"
        debug="${project.build.debug}"
        classpathref="project.test.classpath"
        source="1.5">
        <include name="mondrian/**/*.java"/>
    </javac>
  </target>

  <target name="version">
    <echo message="olap4j ${version}${line.separator}" file="VERSION.txt"/>
  </target>

  <target name="parser">
    <taskdef name="javacup" classname="java_cup.JavaCUPTask">
      <classpath refid="project.classpath"/>
    </taskdef>
    <javacup
        srcdir="${src.dir}"
        input="${src.dir}/org/olap4j/mdx/parser/impl/DefaultMdxParser.cup"
        expect="61"
        interface="true"/>
  </target>

  <target name="srczip" depends="version">
    <mkdir dir="${dist.dir}" />
    <delete file="${dist.src.file}"/>
    <zip
        zipfile="${dist.src.file}"
        update="true">
      <zipfileset
          dir="."
          prefix="${dist.name}"
          includes="
${src.dir}/**/*.java,
${testsrc.dir}/**/*.java,
doc/**/*.css,
doc/**/*.png,
doc/**/*.html,
doc/**/*.pdf,
build.xml,
build.properties,
test.properties.example,
LICENSE.html,
README.txt,
VERSION.txt"
          excludes="
${javadoc.dir}/**,
**/_vti*/*,
**/*~,
**/junit-results/**" />
      <zipfileset
          dir="."
          prefix="${dist.name}"
          filemode="755"
          includes="
buildJdk16.bat,
buildJdk16.sh" />
    </zip>
  </target>

  <target name="release" depends="clean-deep, binzip"/>

  <target name="binzip"
      depends="clean,version,jar,srczip,retroweave,jar-jdk14,javadoc,javadoc-pdf">
    <mkdir dir="${dist.dir}" />
    <delete file="${dist.bin.file}"/>
    <zip zipfile="${dist.bin.file}">
      <zipfileset
          dir="."
          prefix="${dist.name}"
          includes="
${doc.dir}/**/*.css,
${doc.dir}/**/*.html,
${doc.dir}/**/*.pdf,
${doc.dir}/**/*.png,
${doc.dir}/api/**/*.xml,
${jar.file},
${jar-jdk14.file},
lib/*.dtd,
lib/mondrian.jar,
lib/mondrian-jdk14.jar,
lib/eigenbase-xom.jar,
lib/eigenbase-properties.jar,
lib/eigenbase-resgen.jar,
lib/commons-dbcp.jar,
lib/commons-pool.jar,
lib/commons-collections.jar,
lib/commons-vfs.jar,
lib/commons-logging.jar,
lib/commons-math-1.0.jar,
lib/javacup.jar,
lib/xercesImpl.jar,
lib/log4j-1.2.9.jar,
lib/asm-2.2.3.jar,
lib/asm-commons-2.2.3.jar,
lib/retroweaver-1.2.4.jar,
lib/retroweaver-rt-1.2.4.jar,
testlib/junit.jar,
testlib/servlet.jar,
LICENSE.html,
README.txt,
VERSION.txt"
          excludes="
**/*~,
**/_vti*/*,
**/*.psp,
${doc.dir}/api/src-html/**/*"/>
      <zipfileset
          dir="${dist.dir}"
          prefix="${dist.name}"
          includes="${dist.name}-src.zip"/>
    </zip>
  </target>

  <target name="doczip"
      depends="version,javadoc-with-ydoc,javadoc-pdf"
      description="Builds a zipfile of the documentation, which can then be
                   deployed to sf.net. See also doc/deployDoc.sh.">
    <mkdir dir="${dist.dir}" />
    <tar
        destfile="${dist.doc.file}"
        compression="gzip">
      <tarfileset
          dir="."
          includes="
doc/api/**/*,
doc/**/*.html,
doc/**/*.pdf,
doc/**/*.png,
doc/**/*.css,
doc/**/*.xml,
doc/olap4j_api.pdf"
          excludes="
**/*~,
**/_vti*/*,
**/*.sh"/>
    </tar>
  </target>

  <target name="checkIsNotJdk16" if="jdk16.present">
    <fail message="The 'jar' target (and dependent targets 'release', 'binzip')
must be run under JDK 1.5." />
  </target>

  <target name="compileJdk16">
    <exec executable="buildJdk16.sh"/>
  </target>

  <target name="jar" depends="version,checkIsNotJdk16,compile,compileJdk16">
    <mkdir dir="${lib.dir}" />
    <zip
        zipfile="${jar.file}"
        update="true">
      <zipfileset
          dir="${classes.dir}"
          includes="
**/*.class,
**/*.properties,
**/*.xml,
META-INF/**"/>
      <zipfileset
          dir="."
          includes="
LICENSE.html,
README.txt,
VERSION.txt"/>
      <fileset
          dir="${src.dir}"
          includes="
META-INF/**"/>
    </zip>
  </target>

  <!-- create a retrowoven jar file which will work under jdk1.4 -->
  <target name="jar-jdk14" depends="version,compile,retroweave">
    <mkdir dir="${lib.dir}" />
    <zip
        zipfile="${jar-jdk14.file}"
        update="true">
      <zipfileset
          dir="${classes.dir}"
          includes="
**/*.class,
**/*.properties,
**/*.xml,
META-INF/**"/>
      <zipfileset
          dir="."
          includes="
LICENSE.html,
README.txt,
VERSION.txt"/>
      <fileset
          dir="${src.dir}"
          includes="
META-INF/**"/>
    </zip>
  </target>

  <target name="javadoc">
    <mkdir dir="${javadoc.dir}" />
    <!-- remove stray package.html files under classes to avoid 'multiple
         sources of package comments' errors -->
    <delete includeEmptyDirs="false" quiet="true">
      <fileset dir="${classes.dir}" includes="**/package.html"/>
    </delete>
    <delete quiet="true" file="${javadoc.dir}/index.html"/>
    <javadoc sourcepath="${src.dir}"
        classpathref="project.test.classpath"
        destdir="${javadoc.dir}"
        packagenames="org.olap4j.*"
        excludepackagenames="org.olap4j.driver.*,org.olap4j.impl.*,org.olap4j.mdx.parser.impl.*,org.olap4j.sample.*"
        overview="${src.dir}/overview.html"
        footer="&lt;a href=&quot;http://sourceforge.net/projects/olap4j&quot;&gt;&lt;img src=&quot;http://sourceforge.net/sflogo.php?group_id=35302&#38;type=1&quot; width=&quot;88&quot; height=&quot;31&quot; border=&quot;0&quot; alt=&quot;SourceForge.net_Logo&quot;&gt;&lt;/a&gt;"
        author="true"
        source="1.5"
        access="public"
        Windowtitle="olap4j, version ${version}"
        additionalparam="-linksource"
      >
      <tag name="pre" description="Pre-condition:"
           scope="constructors,methods"/>
      <tag name="post" description="Post-condition:"
           scope="constructors,methods"/>
      <tag name="testcase" description="Test-case:"
           scope="constructors,methods,types"/>
      <link href="http://java.sun.com/javase/6/docs/api/"/>
      <link href="http://mondrian.pentaho.org/api/"/>
    </javadoc>
  </target>

    <!-- Strict javadoc for testing purposes. Includes all packages and
         non-public classes and methods. -->
    <target name="javadoc-strict">
      <mkdir dir="${javadoc.dir}" />
      <!-- remove stray package.html files under classes to avoid 'multiple
           sources of package comments' errors -->
      <delete includeEmptyDirs="false" quiet="true">
        <fileset dir="${classes.dir}" includes="**/package.html"/>
      </delete>
      <delete quiet="true" file="${javadoc.dir}/index.html"/>
      <javadoc sourcepath="${src.dir}:${testsrc.dir}"
          classpathref="project.test.classpath"
          destdir="${javadoc.dir}"
          packagenames="org.olap4j.*,mondrian.olap4j.*"
          overview="${src.dir}/overview.html"
          footer="&lt;a href=&quot;http://sourceforge.net/projects/olap4j&quot;&gt;&lt;img src=&quot;http://sourceforge.net/sflogo.php?group_id=35302&#38;type=1&quot; width=&quot;88&quot; height=&quot;31&quot; border=&quot;0&quot; alt=&quot;SourceForge.net_Logo&quot;&gt;&lt;/a&gt;"
          author="true"
          source="1.5"
          access="private"
          Windowtitle="olap4j, version ${version}"
        >
        <tag name="pre" description="Pre-condition:"
             scope="constructors,methods"/>
        <tag name="post" description="Post-condition:"
             scope="constructors,methods"/>
        <tag name="testcase" description="Test-case:"
             scope="constructors,methods,types"/>
        <link href="http://java.sun.com/javase/6/docs/api/"/>
        <link href="http://mondrian.pentaho.org/api/"/>
      </javadoc>
    </target>

  <!-- Generate javadoc with embedded UML diagrams using the yDoc doclet from
       yWorks.com. Set ydoc.home in build.properties, then replace
       ${ydoc.home}/resources/ydoc.license with a full license (free for open
       source use). -->
  <target name="javadoc-with-ydoc">
    <mkdir dir="${javadoc.dir}" />
    <!-- remove stray package.html files under classes to avoid 'multiple
         sources of package comments' errors -->
    <delete includeEmptyDirs="false" quiet="true">
      <fileset dir="${classes.dir}" includes="**/package.html"/>
    </delete>
    <delete quiet="true" file="${javadoc.dir}/index.html"/>
    <property name="ps" value="${path.separator}"/>
    <javadoc sourcepath="${src.dir}"
        classpathref="project.test.classpath"
        destdir="${javadoc.dir}"
        packagenames="org.olap4j.*"
        excludepackagenames="org.olap4j.driver.*,org.olap4j.impl.*,org.olap4j.mdx.parser.impl.*,org.olap4j.sample.*"
        overview="${src.dir}/overview.html"
        footer="&lt;a href=&quot;http://sourceforge.net/projects/olap4j&quot;&gt;&lt;img src=&quot;http://sourceforge.net/sflogo.php?group_id=35302&#38;type=1&quot; width=&quot;88&quot; height=&quot;31&quot; border=&quot;0&quot; alt=&quot;SourceForge.net_Logo&quot;&gt;&lt;/a&gt;"
        author="true"
        source="1.5"
        access="public"
        Windowtitle="olap4j, version ${version}"
        additionalparam="-linksource"
      >
      <tag name="pre" description="Pre-condition:"
           scope="constructors,methods"/>
      <tag name="post" description="Post-condition:"
           scope="constructors,methods"/>
      <tag name="testcase" description="Test-case:"
           scope="constructors,methods,types"/>
      <link href="http://java.sun.com/javase/6/docs/api/"/>
      <link href="http://mondrian.pentaho.org/api/"/>
      <link href="http://www.junit.org/junit/javadoc/3.8/"/>
      <doclet
          name="ydoc.doclets.YStandard"
          path="${ydoc.home}/lib/ydoc.jar${ps}${ydoc.home}/lib/class2svg.jar${ps}${ydoc.home}/resources${ps}${ydoc.home}/doc">
        <param name="-author"/>
        <param name="-generic"/>
        <param name="-umlautogen"/>
        <param name="-tag" value="y.precondition"/>
        <param name="-tag" value="y.postcondition"/>
        <param name="-tag" value="y.complexity"/>
        <param name="-tag" value="param"/>
        <param name="-tag" value="return"/>
        <param name="-tag" value="see"/>
        <param name="-tag" value="y.uml"/>
      </doclet>
    </javadoc>
  </target>

  <target name="javadoc-pdf">
    <!-- remove stray package.html files under classes to avoid 'multiple
         sources of package comments' errors -->
    <delete includeEmptyDirs="false" quiet="true">
      <fileset dir="${classes.dir}" includes="**/package.html"/>
    </delete>
    <javadoc sourcepath="${src.dir}"
        classpathref="project.test.classpath"
        packagenames="org.olap4j.*"
        excludepackagenames="org.olap4j.driver.*,org.olap4j.mdx.parser.impl.*,org.olap4j.sample.*"
        overview="${src.dir}/overview.html"
        author="true"
        source="1.5"
        access="public"
      >
      <doclet name="com.tarsec.javadoc.pdfdoclet.PDFDoclet"
            path="lib/pdfdoclet-1.0.2-all.jar">
          <param name="-pdf" value="doc/olap4j_api.pdf"/>
          <param name="-config" value="doc/pdfdoclet.properties"/>
      </doclet>
    </javadoc>
  </target>

  <target name="test" depends="prepare, compile, compile.tests">
    <junit printsummary="yes" fork="yes" failureproperty="junit.failure"
      tempdir="${testlog.dir}">
      <formatter type="plain"/>
      <formatter type="xml"/>
      <batchtest todir="${testlog.dir}">
        <fileset dir="${testclasses.dir}">
          <include name="**/*Test.class"/>
        </fileset>
      </batchtest>
      <classpath refid="project.test.classpath"/>
      <jvmarg value="-Xmx256m"/>
    </junit>
  </target>

  <taskdef name="retroweaver"
      classname="com.rc.retroweaver.ant.RetroWeaverTask">
    <classpath>
      <pathelement location="${lib.dir}/asm-2.2.3.jar" />
      <pathelement location="${lib.dir}/asm-commons-2.2.3.jar" />
      <pathelement location="${lib.dir}/retroweaver-1.2.4.jar" />
      <pathelement location="${lib.dir}/retroweaver-rt-1.2.4.jar" />
    </classpath>
  </taskdef>

  <target name="retroweave">
    <retroweaver srcdir="${classes.dir}" />
  </target>

</project>

<!-- End build.xml -->
